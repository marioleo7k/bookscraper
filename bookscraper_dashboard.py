# Importa칞칚o das bibliotecas necess치rias
import pandas as pd  # Biblioteca para manipula칞칚o de dados (DataFrame)
import streamlit as st  # Biblioteca para criar a aplica칞칚o web
import plotly.express as px  # Biblioteca para cria칞칚o de gr치ficos interativos

# Definir o tema da aplica칞칚o (pode ser feito no arquivo config.toml tamb칠m)
st.set_page_config(page_title="Dashboard de Livros", layout="wide")  # Configura o t칤tulo da p치gina e o layout da aplica칞칚o

# Centralizar o conte칰do da dashboard usando CSS customizado
st.markdown(
    """
    <style>
    .main {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
    }
    .block-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        max-width: 100%;
        margin: 0 auto;
    }
    </style>
    """, unsafe_allow_html=True)  # Aplica o CSS no HTML gerado pela aplica칞칚o

# T칤tulo da Dashboard
st.title("游닄 Dashboard de Livros - BookScraper")  # Exibe o t칤tulo principal da dashboard

# Fun칞칚o para carregar o arquivo CSV
def carregar_dados():
    try:
        # Carrega o arquivo CSV e garante que a codifica칞칚o est치 correta
        df = pd.read_csv("livros.csv", encoding="utf-8")
        
        # Limpa caracteres indesejados na coluna 'Pre칞os' (ex: s칤mbolos) e converte para float
        df["Pre칞os"] = df["Pre칞os"].str.replace("[^\\d\\.]", "", regex=True).astype(float)
        return df
    except FileNotFoundError:
        # Caso o arquivo CSV n칚o seja encontrado, exibe um erro
        st.error("Arquivo 'livros.csv' n칚o encontrado. Certifique-se de que o arquivo foi gerado pelo BookScraper.")
        return None
    except Exception as e:
        # Exibe um erro gen칠rico em caso de falha ao carregar os dados
        st.error(f"Erro ao processar os dados: {e}")
        return None

# Carregar os dados a partir do arquivo CSV
df = carregar_dados()

if df is not None:
    # Exibir a tabela de dados carregados
    st.subheader("游늶 Dados Extra칤dos")  # Subt칤tulo para a se칞칚o de dados
    st.dataframe(df)  # Exibe o DataFrame como uma tabela interativa na dashboard

    # Exibe a an치lise descritiva dos dados
    st.subheader("游늵 An치lise Descritiva")  # Subt칤tulo para a se칞칚o de an치lise
    st.write("**Quantidade total de livros:**", len(df))  # Exibe o n칰mero total de livros
    st.write("**Pre칞o m칠dio dos livros (춲):**", round(df["Pre칞os"].mean(), 2))  # Exibe o pre칞o m칠dio
    st.write("**Pre칞o m치ximo (춲):**", df["Pre칞os"].max())  # Exibe o pre칞o m치ximo
    st.write("**Pre칞o m칤nimo (춲):**", df["Pre칞os"].min())  # Exibe o pre칞o m칤nimo

    # Gr치fico: Distribui칞칚o de Pre칞os
    st.subheader("游늴 Distribui칞칚o de Pre칞os")  # Subt칤tulo para o gr치fico de distribui칞칚o
    fig_hist = px.histogram(
        df, x="Pre칞os", nbins=20, title="Distribui칞칚o de Pre칞os dos Livros",  # Cria o histograma
        labels={"Pre칞os": "Pre칞o (춲)"}, color_discrete_sequence=['#FF6347']  # Personaliza r칩tulos e cor
    )
    st.plotly_chart(fig_hist)  # Exibe o gr치fico de histograma na dashboard

    # Gr치fico: Top 10 Livros Mais Caros
    st.subheader("游눶 Top 10 Livros Mais Caros")  # Subt칤tulo para o gr치fico de livros mais caros
    df_top10 = df.nlargest(10, "Pre칞os")  # Filtra os 10 livros mais caros com base na coluna 'Pre칞os'
    fig_bar = px.bar(
        df_top10, x="Livros", y="Pre칞os", title="Top 10 Livros Mais Caros",  # Cria o gr치fico de barras
        labels={"Livros": "T칤tulo do Livro", "Pre칞os": "Pre칞o (춲)"}, color="Pre칞os",  # Personaliza r칩tulos e cores
        color_continuous_scale="viridis"  # Escolhe a paleta de cores para o gr치fico
    )
    
    # Limita칞칚o do eixo Y entre 59 e 60
    fig_bar.update_layout(
        xaxis_title="T칤tulo do Livro",  # T칤tulo do eixo X
        yaxis_title="Pre칞o (춲)",  # T칤tulo do eixo Y
        yaxis=dict(range=[59, 60]),  # Define os limites do eixo Y para uma faixa espec칤fica
        plot_bgcolor="rgba(0,0,0,0)",  # Deixa o fundo transparente
        showlegend=False  # Remove a legenda do gr치fico
    )
    st.plotly_chart(fig_bar)  # Exibe o gr치fico de barras na dashboard

    # Gr치fico: Pre칞o dos Livros por Ordem de Extra칞칚o
    st.subheader("游댝 Pre칞o dos Livros por Ordem de Extra칞칚o")  # Subt칤tulo para o gr치fico de pre칞os por ordem
    fig_scatter = px.scatter(
        df, x=range(1, len(df) + 1), y="Pre칞os", title="Pre칞o dos Livros por Ordem",  # Cria o gr치fico de dispers칚o
        labels={"x": "Ordem de Extra칞칚o", "Pre칞os": "Pre칞o (춲)"}, color="Pre칞os",  # Personaliza r칩tulos e cores
        color_continuous_scale="blues"  # Escolhe a paleta de cores para o gr치fico
    )
    st.plotly_chart(fig_scatter)  # Exibe o gr치fico de dispers칚o na dashboard

else:
    # Mensagem de aviso caso o arquivo CSV ainda n칚o esteja dispon칤vel
    st.warning("Aguarde o arquivo 'livros.csv' ser gerado pelo BookScraper para visualizar a dashboard.")  # Exibe um aviso